/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package java_fitxar;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author marc
 */
public class CrearUsuari extends javax.swing.JFrame {

    /**
     * Creates new form Registre
     */
    public CrearUsuari(JFrame parentFrame) {
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE); // Solo cierra esta ventana
        setTitle("Crear Profesor");
        
        setLocationRelativeTo(parentFrame); // Centrar la ventana respecto al principal
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu1 = new java.awt.PopupMenu();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtNom = new javax.swing.JTextField();
        txtCognoms = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtNomUsuari = new javax.swing.JTextField();
        txtContrasenya = new javax.swing.JTextField();
        txtContrasenya1 = new javax.swing.JTextField();
        bttnRegistrar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtDNI = new javax.swing.JTextField();

        popupMenu1.setLabel("popupMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Crear un nou professor");

        jLabel3.setText("Nom");

        jLabel4.setText("Email");

        jLabel5.setText("Congnoms");

        jLabel6.setText("Nom de usuari");

        jLabel7.setText("Contrasenya");

        jLabel8.setText("Repetir contrasenya");

        bttnRegistrar.setText("Crear");
        bttnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnRegistrarActionPerformed(evt);
            }
        });

        jLabel2.setText("DNI");

        txtDNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDNIActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bttnRegistrar)
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtContrasenya)
                            .addComponent(txtContrasenya1, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNom, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(txtCognoms)
                            .addComponent(txtEmail)
                            .addComponent(txtNomUsuari)
                            .addComponent(txtDNI))))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCognoms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtNomUsuari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtContrasenya, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(txtContrasenya1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(bttnRegistrar)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bttnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnRegistrarActionPerformed
    String nom = txtNom.getText().trim();
    String cognoms = txtCognoms.getText().trim();
    String email = txtEmail.getText().trim();
    String nomUsuari = txtNomUsuari.getText().trim();
    String contrasenya = txtContrasenya.getText().trim();
    String contrasenya1 = txtContrasenya1.getText().trim();
    String dni = txtDNI.getText().trim(); // Aseg√∫rate de tener un campo para el DNI

    // Validaci√≥n de campos vac√≠os
    if (nom.isEmpty() || cognoms.isEmpty() || email.isEmpty() || nomUsuari.isEmpty() || 
        contrasenya.isEmpty() || contrasenya1.isEmpty() || dni.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Si us plau, ompli tots els camps.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validar que las contrase√±as coincidan
    if (!contrasenya.equals(contrasenya1)) {
        JOptionPane.showMessageDialog(this, "Les contrasenyes no coincideixen.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validar formato del DNI
    if (dni.length() > 9 || !dni.matches("[A-Za-z0-9]+")) {
        JOptionPane.showMessageDialog(this, "El DNI no √©s v√†lid. Ha de ser alfanum√®ric i tenir un m√†xim de 9 car√†cters.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Intentar registrar al usuario
    if (registreUsuari(nom, cognoms, email, nomUsuari, contrasenya, dni)) {
        JOptionPane.showMessageDialog(this, "Registre completat amb √®xit.");
        ((GestioProfessors) getParent()).cargarProfessores(); // Actualizar la tabla en GestioProfessors
        dispose(); // Cerrar el formulario despu√©s del registro exitoso
    } else {
        JOptionPane.showMessageDialog(this, "El registre no es va poder completar. Verifiqueu les dades i torneu a intentar-ho.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_bttnRegistrarActionPerformed

    private void txtDNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDNIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDNIActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearUsuari.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearUsuari.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearUsuari.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearUsuari.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }
    private boolean registreUsuari(String nom, String cognoms, String email, String nomUsuari, String contrasenya, String dni) {
    // Validar el email
    if (!esEmailValido(email)) {
        JOptionPane.showMessageDialog(this, "El correo electr√≥nico no es v√°lido.", "Error de Validaci√≥n", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    // Validar el DNI
    if (dni.length() > 9 || !dni.matches("[A-Za-z0-9]+")) {
        JOptionPane.showMessageDialog(this, "El DNI no es v√°lido. Debe ser alfanum√©rico y tener un m√°ximo de 9 caracteres.", "Error de Validaci√≥n", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    String queryVerificar = "SELECT nom_usuari, email, dni FROM usuaris WHERE nom_usuari = ? OR email = ? OR dni = ?";
    try (Connection connection = DatabaseConnection.getConnection();
         PreparedStatement preparedStatement = connection.prepareStatement(queryVerificar)) {

        preparedStatement.setString(1, nomUsuari);
        preparedStatement.setString(2, email);
        preparedStatement.setString(3, dni);

        try (ResultSet resultSet = preparedStatement.executeQuery()) {
            if (resultSet.next()) {
                String mensaje = "";
                if (nomUsuari.equals(resultSet.getString("nom_usuari"))) {
                    mensaje += "El nombre de usuario ya est√° en uso.\n";
                }
                if (email.equals(resultSet.getString("email"))) {
                    mensaje += "El correo electr√≥nico ya est√° registrado.\n";
                }
                if (dni.equals(resultSet.getString("dni"))) {
                    mensaje += "El DNI ya est√° registrado.\n";
                }
                JOptionPane.showMessageDialog(this, mensaje, "Error de Validaci√≥n", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }

        // Generar la sal
        String salt = PasswordUtils.generarSalt();
        // Hashear la contrase√±a con la sal
        String contrasenyaHasheada = PasswordUtils.hashPassword(contrasenya, salt);

        // Insertar usuario con DNI, sal y contrase√±a hasheada
        String queryInsertar = "INSERT INTO usuaris (nom, cognoms, email, nom_usuari, password, salt, dni) VALUES (?, ?, ?, ?, ?, ?, ?)";
        try (PreparedStatement insertStatement = connection.prepareStatement(queryInsertar)) {
            insertStatement.setString(1, nom);
            insertStatement.setString(2, cognoms);
            insertStatement.setString(3, email);
            insertStatement.setString(4, nomUsuari);
            insertStatement.setString(5, contrasenyaHasheada);
            insertStatement.setString(6, salt); // Guardar la sal
            insertStatement.setString(7, dni); // Guardar el DNI
            int filasInsertadas = insertStatement.executeUpdate();
            
            if (filasInsertadas > 0) {
                JOptionPane.showMessageDialog(this, "Usuario registrado con √©xito.");
                // Aseg√∫rate de que solo se abra el men√∫ si no est√° ya abierto
                if (!Menu.isMenuAbierto()) { // Este m√©todo verifica si el men√∫ ya est√° abierto
                    new Menu().setVisible(true);
                }
                return true;
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo completar el registro.", "Error", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error al ejecutar la consulta: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }
}


    
    private boolean esEmailValido(String email) {
    String regex = "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$";
    Pattern pattern = Pattern.compile(regex);
    return pattern.matcher(email).matches();
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttnRegistrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private java.awt.PopupMenu popupMenu1;
    private javax.swing.JTextField txtCognoms;
    private javax.swing.JTextField txtContrasenya;
    private javax.swing.JTextField txtContrasenya1;
    private javax.swing.JTextField txtDNI;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNom;
    private javax.swing.JTextField txtNomUsuari;
    // End of variables declaration//GEN-END:variables
}
